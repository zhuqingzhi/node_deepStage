如果没有管道目标，则通过调用 stream.pause() 方法。
如果有管道目标，则删除所有管道目标。 可以通过调用 stream.unpipe() 方法删除多个管道目标。
要记住的重要概念是，在提供消费或忽略该数据的机制之前，Readable 不会产生数据。 如果消费机制被禁用或移除，则 Readable 将尝试停止产生数据。

出于向后兼容性的原因，删除 'data' 事件句柄不会自动暂停流。 此外，如果有管道目标，则调用 stream.pause() 将不能保证一旦这些目标排空并要求更多数据，流将保持暂停状态。

如果 Readable 切换到流动模式并且没有消费者可用于处理数据，则数据将被丢失。 例如，当调用 readable.resume() 方法而没有绑定到 'data' 事件的监听器时，或者当从流中删除 'data' 事件句柄时，就会发生这种情况。